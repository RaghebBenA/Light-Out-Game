{"version":3,"sources":["cell/cell.js","board/board.js","board/boardHelper.js","App.js","index.js"],"names":["Cell","cellLit","flipCell","className","onClick","Board","nrows","ncols","useState","board","y","row","x","push","Math","random","creatBoarder","setBoard","Clicked","setClicked","hasWon","setHasWon","flipCellsAround","coord","boardEl","split","map","Number","every","cell","tblBoard","key","MakeTable","App","ReactDOM","render","document","getElementById"],"mappings":"kSAGe,SAASA,EAAT,GAAsC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAItC,OAAO,wBAAIC,UAAYF,EAAmB,aAAT,OAAuBG,QAASF,I,UCwEpDG,EA1ED,WACZ,IAAIC,EAAQ,EACRC,EAAQ,EAFM,EAIQC,mBCTA,WAE1B,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAIE,KAAKC,KAAKC,SAAW,KAE3BN,EAAMI,KAAKF,GAEb,OAAOF,EDA4BO,IAJjB,mBAIXP,EAJW,KAIJQ,EAJI,OAKYT,oBAAS,GALrB,mBAKXU,EALW,KAKFC,EALE,OAMUX,oBAAS,GANnB,mBAMXY,EANW,KAMHC,EANG,KAOZC,EAAkB,SAACC,GACvB,IAAIC,EAAUf,EADmB,EAEpBc,EAAME,MAAM,KAAKC,IAAIC,QAFD,mBAE5BjB,EAF4B,KAEzBE,EAFyB,KAIjC,SAASV,EAASQ,EAAGE,GACfA,GAAK,GAAKA,EAAIL,GAASG,GAAK,GAAKA,EAAIJ,IACvCkB,EAAQd,GAAGE,IAAMY,EAAQd,GAAGE,IAGhCV,EAASQ,EAAGE,GACZV,EAASQ,EAAGE,EAAI,GAChBV,EAASQ,EAAGE,EAAI,GAChBV,EAASQ,EAAI,EAAGE,GAChBV,EAASQ,EAAI,EAAGE,GAEhB,IAAIQ,EAASX,EAAMmB,OAAM,SAACjB,GAAD,OAASA,EAAIiB,OAAM,SAACC,GAAD,OAAWA,QAEvDR,EAAUD,GACVH,EAASO,IA6BX,OACE,6BACGJ,EACC,yBAAKjB,UAAU,UACb,0BAAMA,UAAU,eAAhB,OACA,0BAAMA,UAAU,aAAhB,SAGF,6BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAf,UACA,yBAAKA,UAAU,aAAf,QArCQ,WAEhB,IADA,IAAI2B,EAAW,GACNpB,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAE9B,IADA,IAAIC,EAAM,GADoB,WAErBC,GACP,IAAIW,EAAK,UAAMb,EAAN,YAAWE,GACpBD,EAAIE,KACF,kBAACb,EAAD,CACE+B,IAAKR,EACLtB,QAASQ,EAAMC,GAAGE,GAClBV,SAAU,WACRoB,EAAgBC,GAChBJ,GAAYD,QARXN,EAAI,EAAGA,EAAIL,EAAOK,IAAM,EAAxBA,GAaTkB,EAASjB,KAAK,wBAAIkB,IAAKrB,GAAIC,IAE7B,OACE,2BAAOR,UAAU,SACf,+BAAQ2B,IAkBLE,ME5DIC,MARf,WACE,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,QCDN+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c982f48d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./cell.scss\";\r\n\r\nexport default function Cell({ cellLit, flipCell }) {\r\n \r\n\r\n\r\n  return <td className={!cellLit ? \"cell\" : \"cell-light\"} onClick={flipCell} />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Cell from \"../cell/cell\";\r\nimport \"./board.scss\";\r\nimport { creatBoarder } from \"./boardHelper.js\";\r\n\r\nconst Board = () => {\r\n  let nrows = 5;\r\n  let ncols = 5;\r\n\r\n  const [board, setBoard] = useState(creatBoarder());\r\n  const [Clicked, setClicked] = useState(false);\r\n  const [hasWon, setHasWon] = useState(false);\r\n  const flipCellsAround = (coord) => {\r\n    let boardEl = board;\r\n    let [y, x] = coord.split(\"-\").map(Number);\r\n\r\n    function flipCell(y, x) {\r\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\r\n        boardEl[y][x] = !boardEl[y][x];\r\n      }\r\n    }\r\n    flipCell(y, x);\r\n    flipCell(y, x - 1);\r\n    flipCell(y, x + 1);\r\n    flipCell(y - 1, x);\r\n    flipCell(y + 1, x);\r\n\r\n    let hasWon = board.every((row) => row.every((cell) => !cell));\r\n\r\n    setHasWon(hasWon);\r\n    setBoard(boardEl);\r\n  };\r\n\r\n  const MakeTable = () => {\r\n    let tblBoard = [];\r\n    for (let y = 0; y < nrows; y++) {\r\n      let row = [];\r\n      for (let x = 0; x < ncols; x++) {\r\n        let coord = `${y}-${x}`;\r\n        row.push(\r\n          <Cell\r\n            key={coord}\r\n            cellLit={board[y][x]}\r\n            flipCell={() => {\r\n              flipCellsAround(coord);\r\n              setClicked(!Clicked);\r\n            }}\r\n          />\r\n        );\r\n      }\r\n      tblBoard.push(<tr key={y}>{row}</tr>);\r\n    }\r\n    return (\r\n      <table className=\"board\">\r\n        <tbody>{tblBoard}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {hasWon ? (\r\n        <div className=\"winner\">\r\n          <span className=\"neon-orange\">YOU</span>\r\n          <span className=\"neon-blue\">WIN!</span>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"Board-title\">\r\n            <div className=\"neon-orange\">Lights</div>\r\n            <div className=\"neon-blue\">Out</div>\r\n          </div>\r\n          {MakeTable()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","export const creatBoarder = () => {\r\n  let board = [];\r\n  for (let y = 0; y < 5; y++) {\r\n    let row = [];\r\n    for (let x = 0; x < 5; x++) {\r\n      row.push(Math.random() > 0.25);\r\n    }\r\n    board.push(row);\r\n  }\r\n  return board;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Board from \"./board/board\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}